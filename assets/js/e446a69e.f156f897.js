"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2617],{7075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(4848),i=t(8453);const r={},o="Changelog format",c={id:"changelog-format",title:"Changelog format",description:"Release-plz generates the changelog by using git-cliff as a library.",source:"@site/docs/changelog-format.md",sourceDirName:".",slug:"/changelog-format",permalink:"/docs/changelog-format",draft:!1,unlisted:!1,editUrl:"https://github.com/MarcoIeni/release-plz/tree/main/website/docs/changelog-format.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/config"},next:{title:"Semver check",permalink:"/docs/semver-check"}},a={},l=[{value:"How should I write my commits?",id:"how-should-i-write-my-commits",level:2},{value:"Body template",id:"body-template",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Context",id:"context",level:3},{value:"Footers",id:"footers",level:4},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"<code>committer</code> vs <code>author</code>",id:"committer-vs-author",level:3},{value:"Examples",id:"examples",level:3},{value:"Tips and tricks",id:"tips-and-tricks",level:3},{value:"Discard duplicate commits",id:"discard-duplicate-commits",level:4},{value:"Filter merge commits",id:"filter-merge-commits",level:4}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"changelog-format",children:"Changelog format"}),"\n",(0,s.jsxs)(n.p,{children:["Release-plz generates the changelog by using ",(0,s.jsx)(n.a,{href:"https://git-cliff.org",children:"git-cliff"})," as a library.\nBy default, release-plz uses the\n",(0,s.jsx)(n.a,{href:"https://keepachangelog.com/en/1.1.0/",children:"keep a changelog"})," format."]}),"\n",(0,s.jsxs)(n.p,{children:["You can customize the changelog format in the ",(0,s.jsx)(n.a,{href:"/docs/config#the-changelog-section",children:(0,s.jsx)(n.code,{children:"[changelog]"})}),"\nsection of the configuration."]}),"\n",(0,s.jsx)(n.h2,{id:"how-should-i-write-my-commits",children:"How should I write my commits?"}),"\n",(0,s.jsxs)(n.p,{children:["Release-plz assumes you are using ",(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"Conventional Commit messages"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The most important prefixes you should have in mind are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fix:"}),": represents bug fixes, and results in a ",(0,s.jsx)(n.a,{href:"https://semver.org/",children:"SemVer"}),"\npatch bump."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"feat:"}),": represents a new feature, and results in a SemVer minor bump."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<prefix>!:"})," (e.g. ",(0,s.jsx)(n.code,{children:"feat!:"}),"): represents a breaking change\n(indicated by the ",(0,s.jsx)(n.code,{children:"!"}),") and results in a SemVer major bump."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Commits that don't follow the Conventional Commit format result in a SemVer patch bump."}),"\n",(0,s.jsx)(n.h2,{id:"body-template",children:"Body template"}),"\n",(0,s.jsxs)(n.p,{children:["A template is a text where variables and expressions get replaced with values when it is rendered.\nBy providing a custom ",(0,s.jsx)(n.a,{href:"/docs/config#the-body-field",children:(0,s.jsx)(n.code,{children:"body"})})," template, you can customize the\nchangelog format."]}),"\n",(0,s.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"git-cliff"})," uses the ",(0,s.jsx)(n.a,{href:"https://keats.github.io/tera/",children:"Tera"})," template engine."]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#templates",children:"Tera Documentation"})," for more information\nabout ",(0,s.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#control-structures",children:"control structures"}),",\n",(0,s.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#built-ins",children:"built-in filters"}),", etc."]}),"\n",(0,s.jsxs)(n.p,{children:["Custom built-in filters that ",(0,s.jsx)(n.strong,{children:"git-cliff"})," uses:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"upper_first"}),": Converts the first character of a string to uppercase."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"context",children:"Context"}),"\n",(0,s.jsxs)(n.p,{children:["The context contains the data used to render the template.\nIn the following, we represent the context used for the\nchangelog generation using ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/JSON",children:"JSON"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"For a conventional commit like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"<type>[scope]: <description>\n\n[body]\n\n[footer(s)]\n"})}),"\n",(0,s.jsx)(n.p,{children:"you can use the following context in the template:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.1.1",\n  "package": "my_crate",\n  "release_link": "https://github.com/me/my_project/compare/my_project-v0.1.0...my_project-v0.1.1",\n  "remote": {\n    "owner": "<repo owner>",\n    "repo": "<repo name>",\n    "link": "<repo link>"\n  },\n  "commits": [\n    {\n      "id": "e795460c9bb7275294d1fa53a9d73258fb51eb10",\n      "group": "<type> (overridden by commit_parsers)",\n      "scope": "[scope]",\n      "message": "<description>",\n      "body": "[body]",\n      "footers": [\n        {\n          "token": "<name of the footer, such as \'Signed-off-by\'>",\n          "separator": "<the separator between the token and value, such as \':\'>",\n          "value": "<the value following the separator",\n          "breaking": false\n        }\n      ],\n      "breaking_description": "<description>",\n      "breaking": false,\n      "conventional": true,\n      "merge_commit": false,\n      "links": [\n        { "text": "(set by link_parsers)", "href": "(set by link_parsers)" }\n      ],\n      "author": {\n        "name": "User Name",\n        "email": "user.email@example.com",\n        "timestamp": 1660330071\n      },\n      "committer": {\n        "name": "User Name",\n        "email": "user.email@example.com",\n        "timestamp": 1660330071\n      }\n    }\n  ],\n  "commit_id": "a440c6eb26404be4877b7e3ad592bfaa5d4eb210 (release commit)",\n  "timestamp": 1625169301,\n  "previous": {\n    "version": "0.1.0"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"footers",children:"Footers"}),"\n",(0,s.jsxs)(n.p,{children:["A conventional commit's body may end with any number of structured key-value pairs known as\n",(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/#specification",children:"footers"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["They follow a format similar to ",(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/git-interpret-trailers",children:"the git trailers convention"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"<token><separator><value>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can access the footers in the template using the ",(0,s.jsx)(n.code,{children:"commit.footers"})," array.\nEach object in the array has the following fields:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token"}),", the name of the footer (preceding the separator character)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"separator"}),", the footer's separator string (either ",(0,s.jsx)(n.code,{children:": "})," or ",(0,s.jsx)(n.code,{children:" #"}),") "]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"}),", the value following the separator character"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"breaking"}),", which is ",(0,s.jsx)(n.code,{children:"true"})," if this is a ",(0,s.jsx)(n.code,{children:"BREAKING CHANGE:"})," footer, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Here are some examples of footers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Signed-off-by: User Name <user.email@example.com>"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Reviewed-by: User Name <user.email@example.com>"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Fixes #1234"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"BREAKING CHANGE: breaking change description"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"breaking"})," flag is set to ",(0,s.jsx)(n.code,{children:"true"})," when:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The commit has an exclamation mark after the commit type and scope, e.g.:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"feat(scope)!: this is a breaking change\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Or when the ",(0,s.jsx)(n.code,{children:"BREAKING CHANGE:"})," footer is present:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"feat: add xyz\n\nBREAKING CHANGE: this is a breaking change\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"breaking_description"})," contains:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The description of the ",(0,s.jsx)(n.code,{children:"BREAKING CHANGE"})," footer (if present)."]}),"\n",(0,s.jsxs)(n.li,{children:["the commit ",(0,s.jsx)(n.code,{children:"message"})," otherwise."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.code,{children:"BREAKING CHANGE:"})," footer is present, the footer is present in ",(0,s.jsx)(n.code,{children:"commit.footers"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["See also the ",(0,s.jsx)(n.a,{href:"/docs/config#the-protect_breaking_commits-field",children:"protect_breaking_commits"})," field."]}),"\n",(0,s.jsxs)(n.h3,{id:"committer-vs-author",children:[(0,s.jsx)(n.code,{children:"committer"})," vs ",(0,s.jsx)(n.code,{children:"author"})]}),"\n",(0,s.jsxs)(n.p,{children:["From the ",(0,s.jsx)(n.a,{href:"https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History",children:"Git docs"}),":"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"You may be wondering what the difference is between author and committer.\nThe author is the person who originally wrote the work, whereas the committer is the person who\nlast applied the work.\nSo, if you send in a patch to a project and one of the core members applies the patch,\nboth of you get credit\u2009\u2014\u2009you as the author, and the core member as the committer."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://git-cliff.org/docs/templating/examples",children:"Here"})," you can find some examples of\ncustom git-cliff templates.\nConverting the git-cliff configuration file into the\n",(0,s.jsx)(n.a,{href:"/docs/config#the-changelog-section",children:(0,s.jsx)(n.code,{children:"[changelog]"})})," section of the release-plz configuration file is easy."]}),"\n",(0,s.jsx)(n.p,{children:"If you want to contribute your cool template using the release-plz configuration file,\nplease open a PR! \ud83d\ude4f"}),"\n",(0,s.jsx)(n.h3,{id:"tips-and-tricks",children:"Tips and tricks"}),"\n",(0,s.jsx)(n.h4,{id:"discard-duplicate-commits",children:"Discard duplicate commits"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja2",children:'{% for commit in commits | unique(attribute="message") %}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"filter-merge-commits",children:"Filter merge commits"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja2",children:'{% for group, commits in commits | filter(attribute="merge_commit", value=false) %}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);