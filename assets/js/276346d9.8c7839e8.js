"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5372],{3045:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"github/input","title":"Input variables","description":"The GitHub action accepts the following input variables:","source":"@site/docs/github/input.md","sourceDirName":"github","slug":"/github/input","permalink":"/docs/github/input","draft":false,"unlisted":false,"editUrl":"https://github.com/release-plz/release-plz/tree/main/website/docs/github/input.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart","permalink":"/docs/github/quickstart"},"next":{"title":"Output","permalink":"/docs/github/output"}}');var i=n(4848),r=n(8453);const c={},o="Input variables",l={},a=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"input-variables",children:"Input variables"})}),"\n",(0,i.jsx)(t.p,{children:"The GitHub action accepts the following input variables:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"command"}),": The release-plz command to run. Accepted values: ",(0,i.jsx)(t.code,{children:"release-pr"}),",\n",(0,i.jsx)(t.code,{children:"release"}),". (By default it runs both commands)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"registry"}),": Registry where the packages are stored.\nThe registry name needs to be present in the Cargo config.\nIf unspecified, the ",(0,i.jsx)(t.code,{children:"publish"})," field of the package manifest is used.\nIf the ",(0,i.jsx)(t.code,{children:"publish"})," field is empty, crates.io is used."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"manifest_path"}),": Path to the Cargo.toml of the project you want to update.\nBoth Cargo workspaces and single packages are supported. (Defaults to the root\ndirectory)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"version"}),": Release-plz version to use. E.g. ",(0,i.jsx)(t.code,{children:"0.3.70"}),". (Default: latest version)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"config"}),": Release-plz config file location. (Defaults to\n",(0,i.jsx)(t.code,{children:"release-plz.toml"})," or ",(0,i.jsx)(t.code,{children:".release-plz.toml"}),")."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"token"}),": Token used to publish to the cargo registry.\nOverride the ",(0,i.jsx)(t.code,{children:"CARGO_REGISTRY_TOKEN"})," environment variable, or the ",(0,i.jsx)(t.code,{children:"CARGO_REGISTRIES_<NAME>_TOKEN"}),"\nenvironment variable, used for registry specified in the ",(0,i.jsx)(t.code,{children:"registry"})," input variable."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"backend"}),": Forge backend. Valid values: ",(0,i.jsx)(t.code,{children:"github"}),", ",(0,i.jsx)(t.code,{children:"gitea"}),". (Defaults to ",(0,i.jsx)(t.code,{children:"github"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["You can specify the input variables by using the ",(0,i.jsx)(t.code,{children:"with"})," keyword.\nFor example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"steps:\n  - ...\n  - name: Run release-plz\n    uses: release-plz/action@v0.5\n# highlight-start\n    # Input variables\n    with:\n      command: release-pr\n      registry: my-registry\n      manifest_path: rust-crates/my-crate/Cargo.toml\n      version: 0.3.70\n# highlight-end\n    env:\n      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);