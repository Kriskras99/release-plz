"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7095],{5447:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var i=n(4848),r=n(8453);const t={},o="Busy repositories",a={id:"extra/busy-repos",title:"Busy repositories",description:"This section discusses some considerations when using release-plz in busy repositories.",source:"@site/docs/extra/busy-repos.md",sourceDirName:"extra",slug:"/extra/busy-repos",permalink:"/docs/extra/busy-repos",draft:!1,unlisted:!1,editUrl:"https://github.com/MarcoIeni/release-plz/tree/main/website/docs/extra/busy-repos.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Releasing binaries",permalink:"/docs/extra/releasing-binaries"},next:{title:"Single changelog",permalink:"/docs/extra/single-changelog"}},c={},l=[{value:"Concurrency",id:"concurrency",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"busy-repositories",children:"Busy repositories"})}),"\n",(0,i.jsxs)(s.p,{children:["This section discusses some considerations when using release-plz in busy repositories.\nFor the purpose of this document, a busy repository is a repository where\nmaintainers push commits to the main branch while ",(0,i.jsx)(s.code,{children:"release-plz release"})," is still running."]}),"\n",(0,i.jsx)(s.p,{children:"If you are using release-plz in a busy repository, please read this section carefully."}),"\n",(0,i.jsx)(s.h2,{id:"concurrency",children:"Concurrency"}),"\n",(0,i.jsxs)(s.p,{children:["Release-plz ",(0,i.jsx)(s.a,{href:"/docs/github/quickstart",children:"docs"})," suggest using the GitHub Actions\n",(0,i.jsx)(s.code,{children:"concurrency"})," block like this to prevent multiple release-plz jobs from running at the same time:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"concurrency:\n  group: release-plz-${{ github.ref }}\n  cancel-in-progress: false\n"})}),"\n",(0,i.jsxs)(s.p,{children:["However, if you have ",(0,i.jsx)(s.a,{href:"/docs/config#the-release_always-field",children:"release_always"})," set to ",(0,i.jsx)(s.code,{children:"false"}),",\nyour release will be skipped\nif release-plz is already running for a previous commit and a new commit is pushed after\nthe release PR is merged."]}),"\n",(0,i.jsx)(s.p,{children:"This is an example commit sequence where the release is skipped:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Commit 1: an initial commit is pushed to the main branch. Release-plz runs."}),"\n",(0,i.jsx)(s.li,{children:"Commit 2: a second commit is pushed to the main branch. The job of this commit is pending,\nwaiting for Release-plz to finish on Commit 1."}),"\n",(0,i.jsx)(s.li,{children:"Commit 3: a third commit is pushed to the main branch. The job of commit 2 is canceled,\nand the job of commit 3 is pending, waiting for Release-plz to finish on Commit 1."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"If this is a concern, you might want to have two separate workflows:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["One that runs ",(0,i.jsx)(s.a,{href:"/docs/github/quickstart#example-release-only",children:"release-plz release"})," on every\ncommit to the main branch ",(0,i.jsx)(s.em,{children:"without"})," the ",(0,i.jsx)(s.code,{children:"concurrency"})," block."]}),"\n",(0,i.jsxs)(s.li,{children:["One that runs ",(0,i.jsx)(s.a,{href:"/docs/github/quickstart#example-release-pr-only",children:"release-plz release-pr"}),"\non every commit to the main branch ",(0,i.jsx)(s.em,{children:"with"})," the ",(0,i.jsx)(s.code,{children:"concurrency"})," block."]}),"\n"]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsxs)(s.p,{children:["This setup is also suggested if ",(0,i.jsx)(s.code,{children:"release_always"})," is set to ",(0,i.jsx)(s.code,{children:"true"})," and you want to avoid\nthe release from containing commits merged after the release PR was merged."]}),(0,i.jsxs)(s.p,{children:["Maybe this should be the default setup for all repositories\n(",(0,i.jsx)(s.a,{href:"https://github.com/MarcoIeni/release-plz/issues/1752",children:"#1752"}),").\nSee also ",(0,i.jsx)(s.a,{href:"https://github.com/MarcoIeni/release-plz/issues/1030",children:"#1030"}),"."]})]})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);